# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  createCourse(
    title: String!
    description: String!
    courseCode: String!
    credits: Int
    image: String
  ): Course!
  deleteCourse(id: ID!): Course
  updateCourse(
    id: ID!
    title: String
    description: String
    courseCode: String
    credits: Int
  ): Course!
  createEvent(
    title: String!
    description: String!
    start: DateTime!
    end: DateTime!
    allDay: Boolean
    upload: String
    course: ID!
  ): Event
  deleteEvent(id: ID!): Event
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
  addCourseToUser(id: ID!): MyCourse
  deleteMyCourse(id: ID!): MyCourse
  createNote(note: String!): Note!
  deleteNote(id: ID!): Note
}

type Query {
  courses(
    where: CourseWhereInput
    orderBy: CourseOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Course]!
  course(where: CourseWhereUniqueInput!): Course
  events: [Event]!
  me: User
  users: [User]!
  myCourses: MyCourse
  notes: Note
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  myCourses: [MyCourse!]!
  notes: [Note!]!
}
