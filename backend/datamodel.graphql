enum Permission {
  ADMIN
  USER
  TEACHER
  PERMISSIONUPDATE
}

type Institution {
  id: ID! @unique
  name: String!
  logo: String
  courses: [Course!]! @relation(name: "InstitutionCourses", onDelete: CASCADE)
  users: [User!]!
}
type User {
  id: ID! @unique
  name: String!
  email: String! @unique
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission]
  courses: [Course!]!
  announcements: [Announcement!]!
    @relation(name: "UserAnnouncements", onDelete: CASCADE)
  myCourses: [MyCourse!]!
  notes: [Note!]! @relation(name: "UserNotes", onDelete: CASCADE)
  institution: Institution
}

type Note {
  id: ID! @unique
  note: String!
  user: User! @relation(name: "UserNotes")
}

type Course {
  id: ID! @unique
  title: String!
  description: String!
  courseCode: String!
  credits: Int
  image: String
  color: String
  days: String
  startDate: DateTime
  endDate: DateTime
  events: [Event!]! @relation(name: "CourseEvents", onDelete: CASCADE)
  announcements: [Announcement!]!
    @relation(name: "CourseAnnouncements", onDelete: CASCADE)
  user: User!
  institution: Institution @relation(name: "InstitutionCourses")
  myCourse: [MyCourse!]! @relation(name: "MyCourse", onDelete: CASCADE)
}

type MyCourse {
  id: ID! @unique
  user: User!
  courses: Course! @relation(name: "MyCourse")
}

type Announcement {
  id: ID! @unique
  text: String!
  date: DateTime!
  clicked: Boolean
  updatedAt: DateTime!
  createdAt: DateTime!
  course: Course! @relation(name: "CourseAnnouncements")
  user: User! @relation(name: "UserAnnouncements")
}

type Event {
  id: ID! @unique
  title: String!
  description: String!
  start: DateTime!
  end: DateTime!
  allDay: Boolean
  upload: String
  color: String
  course: Course! @relation(name: "CourseEvents")
}
